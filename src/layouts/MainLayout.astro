---
// src/layouts/MainLayout.astro
import { SEO } from "astro-seo";
import Footer from "@components/footer.astro";
import Navbar from "@components/navbar/navbar.astro";
import "@fontsource-variable/inter/index.css";

import { getLocaleFromPath, loadTranslations } from "../utils/i18n";

// Get locale from URL or use default
const currentLocale = getLocaleFromPath(Astro.url.pathname) || 'fr';

// Load translations
const translations = await loadTranslations(null, currentLocale);

export interface Props {
  title: string;
  openGraphType?: string;
  description?: string;
  openGraphImages?: { url: string }[];
  twitterCard?: { 
    card: string; 
    site: string; 
    images: string[]; 
  };
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site).toString();
const resolvedImageWithDomain = new URL(
  "/opengraph.jpg",
  Astro.site
).toString();

  const { title, openGraphType, description, openGraphImages, twitterCard } = Astro.props;
const makeTitle = title
  ? title + " | " + translations.site.title
  : translations.site.title;
---

<!DOCTYPE html>
<html lang={currentLocale}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
      <SEO
        title={makeTitle}
        description={description || translations.site.description || ""}
        canonical={canonicalURL}
        openGraph={{
          basic: {
            title: makeTitle,
            type: openGraphType || "website",
            image: openGraphImages?.[0]?.url || resolvedImageWithDomain,
            url: canonicalURL
          },
          image: {
            alt: "Martin C Scott Homepage Screenshot",
            width: 1200,
            height: 630,
            type: "image/jpeg"
          }
        }}
        twitter={twitterCard}
      />
    <style is:global>
      @import "../styles/utilities.css";
      @import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400..900&display=swap');
    </style>
  </head>
<body class="bg-slate-100 dark:bg-deep-purple">
    <div class="bg-transparent">
      <div class="bg-transparent"></div>
      <Navbar currentLocale={currentLocale} />
        <slot />
      <Footer />
    </div>
  </body>
  <script>
    const switchTheme = document.querySelector(
      "[data-switch-theme]"
    ) as HTMLButtonElement;

    if (
      localStorage.getItem("appTheme") === "dark" ||
      (!("appTheme" in localStorage) &&
        window.matchMedia("(prefers-color-scheme: dark)").matches)
    ) {
      document.documentElement.classList.add("dark");
    } else {
      document.documentElement.classList.remove("dark");
    }

    if (switchTheme) {
      switchTheme.addEventListener("click", (e) => {
        e.preventDefault();
        const doc = document.documentElement;
        if (doc) {
          if (localStorage.getItem("appTheme")) {
            if (localStorage.getItem("appTheme") === "light") {
              doc.classList.add("dark");
              localStorage.setItem("appTheme", "dark");
            } else {
              document.documentElement.classList.remove("dark");
              localStorage.setItem("appTheme", "light");
            }
          } else {
            if (doc.classList.contains("dark")) {
              doc.classList.remove("dark");
              localStorage.setItem("appTheme", "light");
            } else {
              doc.classList.add("dark");
              localStorage.setItem("appTheme", "dark");
            }
          }
        }
      });
    }
  </script>
</html>
