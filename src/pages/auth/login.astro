---
import MainLayout from '../../layouts/MainLayout.astro';
import Link from "@components/ui/link.astro";
import { Icon } from "astro-icon/components";
import { getLocaleFromPath, loadTranslations } from "../../utils/i18n";

// Get locale from URL or use default
const currentLocale = getLocaleFromPath(Astro.url.pathname) || 'fr';

// Import translations
const authTranslations = await import(`../../i18n/auth.json`);
const translations = authTranslations[currentLocale] || authTranslations.fr;

export const title = translations.login;
---

<MainLayout title={title}>
  <div class="auth-container">
      <h1 class="text-2xl font-bold mb-6 text-gray-800 dark:text-white">{translations.clientPortal}</h1>
    
    <form id="login-form" class="space-y-4">
      <div class="form-group">
        <label for="email" class="block mb-2 text-sm font-medium text-gray-700 dark:text-gray-300">{translations.email}</label>
        <input type="email" id="email" name="email" required 
          class="w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white">
      </div>
      
      <div class="form-group">
        <label for="password" class="block mb-2 text-sm font-medium text-gray-700 dark:text-gray-300">{translations.password}</label>
        <input type="password" id="password" name="password" required
          class="w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white">
      </div>
      
      <button type="submit" id="login-button"
        class="w-full rounded text-center transition focus-visible:ring-2 ring-offset-2 ring-gray-200 dark:ring-gray-800 px-5 py-2.5 bg-black text-white hover:bg-gray-800 border-2 border-transparent dark:bg-white dark:text-black dark:hover:bg-gray-200 flex items-center justify-center">
        <span>{translations.login}</span>
      </button>
      
        <p class="auth-link text-gray-700 dark:text-gray-300 text-center text-sm mt-4">
          {translations.newToPortal} 
          <a href="/auth/signup" class="text-blue-500 hover:underline dark:text-blue-400 ml-1">{translations.createAccount}</a>
        </p>
        <p class="auth-link text-gray-700 dark:text-gray-300 text-center text-sm">
          <a href="/auth/reset-password" class="text-blue-500 hover:underline dark:text-blue-400">{translations.needAssistance}</a>
        </p>
    </form>

    <div class="social-login mt-6 text-center">
      <h2 class="mb-3 text-base font-medium text-gray-700 dark:text-gray-300">{translations.orLoginWith}</h2>
      <div class="flex justify-center space-x-2">
        <button id="github-login" 
          class="m-1 rounded text-center transition focus-visible:ring-2 ring-offset-2 ring-gray-200 dark:ring-gray-800 px-4 py-2 bg-white border-2 border-black hover:bg-gray-100 text-black dark:bg-black dark:border-white dark:hover:bg-gray-800 dark:text-white flex items-center">
          <Icon class="text-black dark:text-white w-4 h-4 mr-2" name="bx:bxl-github" />
          GitHub
        </button>
        <button id="google-login"
          class="m-1 rounded text-center transition focus-visible:ring-2 ring-offset-2 ring-gray-200 dark:ring-gray-800 px-4 py-2 bg-white border-2 border-black hover:bg-gray-100 text-black dark:bg-black dark:border-white dark:hover:bg-gray-800 dark:text-white flex items-center">
          <Icon class="text-black dark:text-white w-4 h-4 mr-2" name="bx:bxl-google" />
          Google
        </button>
      </div>
    </div>
  </div>

  <script>
    // This script runs in the browser
    import { supabase } from '../../utils/supabase';
    
    // Handle email/password login
    document.getElementById('login-form').addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const email = (document.getElementById('email') as HTMLInputElement).value;
      const password = (document.getElementById('password') as HTMLInputElement).value;
      
      try {
        const { data, error } = await supabase.auth.signInWithPassword({
          email,
          password
        });
        
        if (error) throw error;
        
        // Redirect to secure area or home page
        window.location.href = '/secure';
      } catch (error) {
        alert('Error logging in: ' + error.message);
      }
    });
    
    // Handle GitHub login
    document.getElementById('github-login').addEventListener('click', async () => {
      try {
        const { error } = await supabase.auth.signInWithOAuth({
          provider: 'github',
        });
        
        if (error) throw error;
      } catch (error) {
        alert('Error with GitHub login: ' + error.message);
      }
    });
    
    // Handle Google login
    document.getElementById('google-login').addEventListener('click', async () => {
      try {
        const { error } = await supabase.auth.signInWithOAuth({
          provider: 'google',
        });
        
        if (error) throw error;
      } catch (error) {
        alert('Error with Google login: ' + error.message);
      }
    });
  </script>

  <style>
    .auth-container {
      @apply mt-20 max-w-md mx-auto p-6 bg-white border-2 dark:bg-deep-purple dark:border-rose-flash rounded-lg shadow-md;
    }
    .form-group {
      @apply mb-4;
    }
    label {
      @apply block mb-2 text-sm font-medium;
    }
    input {
      @apply w-full p-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:text-white;
    }
    .auth-link {
      @apply mt-4 text-center text-sm;
    }
    .social-login {
      @apply mt-6 text-center;
    }
    .social-login h2 {
      @apply mb-3 text-base font-medium;
    }
  </style>
</MainLayout>
